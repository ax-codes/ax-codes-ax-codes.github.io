<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿兴的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ax-codes.github.io/"/>
  <updated>2020-07-29T05:50:07.117Z</updated>
  <id>https://ax-codes.github.io/</id>
  
  <author>
    <name>AX Blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux下查看CPU的总核数以及逻辑核数</title>
    <link href="https://ax-codes.github.io/2020/07/29/%E6%8A%80%E6%9C%AF/2020-07-29-linux%E4%B8%8B%E6%9F%A5%E7%9C%8BCPU%E7%9A%84%E6%80%BB%E6%A0%B8%E6%95%B0%E4%BB%A5%E5%8F%8A%E9%80%BB%E8%BE%91%E6%A0%B8%E6%95%B0/"/>
    <id>https://ax-codes.github.io/2020/07/29/技术/2020-07-29-linux下查看CPU的总核数以及逻辑核数/</id>
    <published>2020-07-29T12:00:00.000Z</published>
    <updated>2020-07-29T05:50:07.117Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>总核数 = 物理 CPU 个数 X 每颗物理 CPU 的核数<br>总逻辑 CPU 数 = 物理 CPU 个数 X 每颗物理 CPU 的核数 X 超线程数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看物理CPU个数</span></span><br><span class="line">cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看每个物理CPU中core的个数(即核数)</span></span><br><span class="line">cat /proc/cpuinfo| grep "cpu cores"| uniq</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看逻辑CPU的个数</span></span><br><span class="line">cat /proc/cpuinfo| grep "processor"| wc -l</span><br><span class="line"></span><br><span class="line"><span class="meta"> #</span><span class="bash">查看CPU信息（型号）</span></span><br><span class="line">cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看内 存信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat /proc/meminfo</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;总核数 = 物理 CPU 个数 X 每颗物理 CPU 的核数&lt;br&gt;总逻辑 CPU 数 = 物理 CPU 个数 X 每颗物理 CPU 的核数
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://ax-codes.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>批量导出mysql多个数据库结构和数据脚本</title>
    <link href="https://ax-codes.github.io/2020/07/29/%E6%8A%80%E6%9C%AF/2020-07-29-%E6%89%B9%E9%87%8F%E5%AF%BC%E5%87%BAmysql%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%84%E5%92%8C%E6%95%B0%E6%8D%AE%E8%84%9A%E6%9C%AC/"/>
    <id>https://ax-codes.github.io/2020/07/29/技术/2020-07-29-批量导出mysql多个数据库结构和数据脚本/</id>
    <published>2020-07-29T12:00:00.000Z</published>
    <updated>2020-08-06T10:01:28.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>批量导出 mysql 多个数据库结构和数据脚本</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### change the values below where needed.....</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 多数据库DBNAMES="MyDb1 MyDb2 MyDb3"</span></span></span><br><span class="line">DBNAMES="IptvOttSqmBJ "</span><br><span class="line">HOST="--host=127.0.0.1"</span><br><span class="line">USER="--user=root"</span><br><span class="line">PASSWORD="--password=test"</span><br><span class="line">BACKUP_DIR="/root/db"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### you can change these values but they are optional....</span></span></span><br><span class="line">OPTIONS="--default-character-set=utf8 --complete-insert --no-create-info --compact -q"</span><br><span class="line">RESTORESCRIPT="$BACKUP_DIR/__restoreData.sql"</span><br><span class="line">DATE=`/bin/date '+%y%m%d_%H%M%S'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 分表的数据，暂时只导出最新那个月的数据</span></span></span><br><span class="line">NOW_MONTH=`/bin/date '+%Y%m'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### make no changes after this....</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### start script ####</span></span></span><br><span class="line">echo removing old temporary files if they exists...</span><br><span class="line">rm -f $&#123;BACKUP_DIR&#125;/*.sql &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">rm -f $&#123;BACKUP_DIR&#125;/*.tar &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">cd $&#123;BACKUP_DIR&#125;</span><br><span class="line"></span><br><span class="line">for DB in $DBNAMES</span><br><span class="line">do</span><br><span class="line">    echo "=========================================="</span><br><span class="line">    echo $&#123;DB&#125;</span><br><span class="line">    echo "=========================================="</span><br><span class="line">    echo 'SET FOREIGN_KEY_CHECKS=0;' &gt;&gt; $RESTORESCRIPT</span><br><span class="line"></span><br><span class="line">    #### 导出表结构</span><br><span class="line">    mysqldump --no-data $HOST $USER $PASSWORD $DB &gt;&gt; $&#123;BACKUP_DIR&#125;/__createTables.sql</span><br><span class="line">    echo 'source __createTables.sql;' &gt;&gt; $RESTORESCRIPT</span><br><span class="line"></span><br><span class="line">    #### 导出表数据</span><br><span class="line">    for TABLE in `mysql $HOST $USER $PASSWORD $DB -e 'show tables' | egrep -v 'Tables_in_' `;</span><br><span class="line">    do</span><br><span class="line">        TABLENAME=$(echo $TABLE|awk '&#123; printf "%s", $0 &#125;')</span><br><span class="line">        FILENAME="$&#123;TABLENAME&#125;.sql"</span><br><span class="line"></span><br><span class="line">        #### 正则忽略 &amp;&amp; 当前月数据忽略</span><br><span class="line">        if [[ $TABLENAME = david_*_tmp ]] || [[ $TABLENAME =~ 'david_trade_detail_' &amp;&amp; $TABLENAME != "david_trade_detail_$&#123;NOW_MONTH&#125;" ]]</span><br><span class="line">        then</span><br><span class="line">            echo $&#123;TABLENAME&#125; '忽略';</span><br><span class="line">            continue</span><br><span class="line">        else</span><br><span class="line">            echo Dumping $&#123;TABLENAME&#125;</span><br><span class="line">            echo 'source ' $BACKUP_DIR'/'$FILENAME';' &gt;&gt; $RESTORESCRIPT</span><br><span class="line">            mysqldump $OPTIONS $HOST $USER $PASSWORD $DB $&#123;TABLENAME&#125; &gt; $&#123;BACKUP_DIR&#125;/$&#123;FILENAME&#125;</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line"></span><br><span class="line">    #### 压缩</span><br><span class="line">:&lt;&lt;aaa</span><br><span class="line">    echo 'SET FOREIGN_KEY_CHECKS=1;' &gt;&gt; $RESTORESCRIPT</span><br><span class="line"></span><br><span class="line">    echo making tar...</span><br><span class="line">    tar -cf $&#123;DB&#125;_$&#123;DATE&#125;.tar *.sql  &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">    echo compressing...</span><br><span class="line">    gzip -9 $&#123;DB&#125;_$&#123;DATE&#125;.tar &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">    echo removing temporary files...</span><br><span class="line">    rm -f $&#123;BACKUP_DIR&#125;/*.sql &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    rm -f $&#123;BACKUP_DIR&#125;/*.tar &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">aaa</span><br><span class="line"></span><br><span class="line">    echo "done with " $DB</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo "=========================================="</span><br><span class="line">echo "            done with all database!       "</span><br><span class="line">echo "=========================================="</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;批量导出 mysql 多个数据库结构和数据脚本&lt;/p&gt;
&lt;h3 id=&quot;脚本&quot;&gt;&lt;a href=&quot;#脚本&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://ax-codes.github.io/tags/linux/"/>
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>编写一个vscode插件</title>
    <link href="https://ax-codes.github.io/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/"/>
    <id>https://ax-codes.github.io/2020/06/07/技术/2020-06-07-编写一个vscode插件/</id>
    <published>2020-06-07T12:00:00.000Z</published>
    <updated>2020-06-10T06:39:03.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>vscode 作为现在一个应用最广泛和最强大的 ide 之一,有时候我们需要自己定制一些插件来提高我们的工作效率;<br>这里我已经开发了一个用于 hexo 的自动生成粘贴图片的插件,踩了一点坑,这里特意记录下来<br>插件地址:<a href="https://github.com/ax-codes/hexo-paste" target="_blank" rel="noopener">https://github.com/ax-codes/hexo-paste</a></p><p>官方 api 文档:<a href="https://code.visualstudio.com/api" target="_blank" rel="noopener">https://code.visualstudio.com/api</a><br>更加详细的中文文档:<a href="https://www.cnblogs.com/liuxianan/p/vscode-plugin-overview.html(作者还一篇谷歌插件开发文章:http://blog.haoji.me/chrome-plugin-develop.html#da-bao-yu-fa-bu)" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/vscode-plugin-overview.html(作者还一篇谷歌插件开发文章:http://blog.haoji.me/chrome-plugin-develop.html#da-bao-yu-fa-bu)</a><br>我的 demo 例子:<a href="https://github.com/ax-codes/hexo-paste" target="_blank" rel="noopener">https://github.com/ax-codes/hexo-paste</a></p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>mac<br>vscode<br>nodejs</p><h3 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h3><p>typescript</p><h3 id="安装-vscode-插件脚手架和打包工具"><a href="#安装-vscode-插件脚手架和打包工具" class="headerlink" title="安装 vscode 插件脚手架和打包工具"></a>安装 vscode 插件脚手架和打包工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yo generator-code</span><br><span class="line">npm i vsce -g</span><br></pre></td></tr></table></figure><h3 id="使用脚手架生成框架"><a href="#使用脚手架生成框架" class="headerlink" title="使用脚手架生成框架"></a>使用脚手架生成框架</h3><p>执行下面命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yo code</span><br></pre></td></tr></table></figure><p>可以看到生成下面框架<br><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/84e939f3-e6e9-4ecd-853c-c7868d55e269.png" alt="84e939f3-e6e9-4ecd-853c-c7868d55e269"></p><h4 id="package-json-文件描述"><a href="#package-json-文件描述" class="headerlink" title="package.json 文件描述"></a>package.json 文件描述</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">//插件的名字,应全部小写,不能有空格</span></span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-paste"</span>,</span><br><span class="line">  <span class="comment">//插件别名,支持中文</span></span><br><span class="line">  <span class="attr">"displayName"</span>: <span class="string">"hexo-paste"</span>,</span><br><span class="line">  <span class="comment">//描述</span></span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="comment">//关键字,用作应用市场搜索</span></span><br><span class="line">  <span class="attr">"keywords"</span>: [<span class="string">"hexo"</span>, <span class="string">"plugin"</span>, <span class="string">"vscode"</span>],</span><br><span class="line">  <span class="comment">//版本</span></span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.1"</span>,</span><br><span class="line">  <span class="comment">//表示该插件适配的最低vscode版本</span></span><br><span class="line">  <span class="attr">"engines"</span>: &#123;</span><br><span class="line">    <span class="attr">"vscode"</span>: <span class="string">"^1.45.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//插件应用市场分类,可选值： [Programming Languages, Snippets, Linters, Themes, Debuggers, Formatters, Keymaps, SCM Providers, Other, Extension Packs, Language Packs]</span></span><br><span class="line">  <span class="attr">"categories"</span>: [<span class="string">"Other"</span>],</span><br><span class="line">  <span class="comment">//发布者,如果要发布到应用市场的话,这个名字必须与发布者一致</span></span><br><span class="line">  <span class="attr">"publisher"</span>: <span class="string">"ax-codes"</span>,</span><br><span class="line">  <span class="comment">//图标 需要带上下面的reponsitory,不然会报这个错‘An icon requires a repository with HTTPS protocol to be specified in this package.json.’</span></span><br><span class="line">  <span class="attr">"icon"</span>: <span class="string">"res/logo.png"</span>,</span><br><span class="line">  <span class="attr">"repository"</span>: &#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://github.com/ax-codes/hexo-paste"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//激活事件</span></span><br><span class="line">  <span class="attr">"activationEvents"</span>: [</span><br><span class="line">    <span class="string">"onCommand:extension.pasteImage"</span>, <span class="comment">//直接执行命令</span></span><br><span class="line">    <span class="string">"onLanguage:markdown"</span> <span class="comment">//定义需要执行插件逻辑的语言 可以js py...</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">//插件的主入口</span></span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"./out/extension.js"</span>,</span><br><span class="line">  <span class="comment">//插件配置项</span></span><br><span class="line">  <span class="attr">"contributes"</span>: &#123;</span><br><span class="line">    <span class="comment">//直接执行命令</span></span><br><span class="line">    <span class="attr">"commands"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"command"</span>: <span class="string">"extension.pasteImage"</span>,</span><br><span class="line">        <span class="attr">"title"</span>: <span class="string">"Paste Image"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">//快捷键命令</span></span><br><span class="line">    <span class="attr">"keybindings"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"command"</span>: <span class="string">"extension.pasteImage"</span>,</span><br><span class="line">        <span class="attr">"key"</span>: <span class="string">"ctrl+alt+v"</span>,</span><br><span class="line">        <span class="attr">"mac"</span>: <span class="string">"cmd+alt+v"</span>,</span><br><span class="line">        <span class="attr">"when"</span>: <span class="string">"editorTextFocus &amp;&amp; editorLangId == markdown"</span> <span class="comment">//表示文件编辑并且必须要是markdown才回处理</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"vscode:prepublish"</span>: <span class="string">"yarn run compile"</span>,</span><br><span class="line">    <span class="attr">"compile"</span>: <span class="string">"tsc -p ./"</span>,</span><br><span class="line">    <span class="attr">"lint"</span>: <span class="string">"eslint src --ext ts"</span>,</span><br><span class="line">    <span class="attr">"watch"</span>: <span class="string">"tsc -watch -p ./"</span>,</span><br><span class="line">    <span class="attr">"pretest"</span>: <span class="string">"yarn run compile &amp;&amp; yarn run lint"</span>,</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"node ./out/test/runTest.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@types/glob"</span>: <span class="string">"^7.1.1"</span>,</span><br><span class="line">    <span class="attr">"@types/mocha"</span>: <span class="string">"^7.0.2"</span>,</span><br><span class="line">    <span class="attr">"@types/node"</span>: <span class="string">"^13.11.0"</span>,</span><br><span class="line">    <span class="attr">"@types/vscode"</span>: <span class="string">"^1.45.0"</span>,</span><br><span class="line">    <span class="attr">"@typescript-eslint/eslint-plugin"</span>: <span class="string">"^2.30.0"</span>,</span><br><span class="line">    <span class="attr">"@typescript-eslint/parser"</span>: <span class="string">"^2.30.0"</span>,</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.8.0"</span>,</span><br><span class="line">    <span class="attr">"glob"</span>: <span class="string">"^7.1.6"</span>,</span><br><span class="line">    <span class="attr">"mocha"</span>: <span class="string">"^7.1.2"</span>,</span><br><span class="line">    <span class="attr">"typescript"</span>: <span class="string">"^3.8.3"</span>,</span><br><span class="line">    <span class="attr">"vscode-test"</span>: <span class="string">"^1.3.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@types/fs-extra"</span>: <span class="string">"^9.0.1"</span>,</span><br><span class="line">    <span class="attr">"@types/uuid"</span>: <span class="string">"^8.0.0"</span>,</span><br><span class="line">    <span class="attr">"fs-extra"</span>: <span class="string">"^9.0.1"</span>,</span><br><span class="line">    <span class="attr">"moment"</span>: <span class="string">"^2.26.0"</span>,</span><br><span class="line">    <span class="attr">"upath"</span>: <span class="string">"^1.2.0"</span>,</span><br><span class="line">    <span class="attr">"uuid"</span>: <span class="string">"^8.1.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="extension-ts-文件描述"><a href="#extension-ts-文件描述" class="headerlink" title="extension.ts 文件描述"></a>extension.ts 文件描述</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// this method is called when your extension is activated</span></span><br><span class="line"><span class="comment">// your extension is activated the very first time the command is executed</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">activate</span>(<span class="params">context: vscode.ExtensionContext</span>) </span>&#123;</span><br><span class="line">  Logger.channel = vscode.window.createOutputChannel(<span class="string">"PasteImage"</span>);</span><br><span class="line">  context.subscriptions.push(Logger.channel);</span><br><span class="line">  Logger.log(</span><br><span class="line">    <span class="string">'Congratulations, your extension "vscode-paste-image" is now active!'</span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">// The command has been defined in the package.json file</span></span><br><span class="line">  <span class="comment">// Now provide the implementation of the command with registerCommand</span></span><br><span class="line">  <span class="comment">// The commandId parameter must match the command field in package.json</span></span><br><span class="line">  <span class="keyword">let</span> disposable = vscode.commands.registerCommand(</span><br><span class="line">    <span class="string">"extension.pasteImage"</span>,</span><br><span class="line">    () =&gt; &#123;</span><br><span class="line">      <span class="comment">//命令执行处理逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  context.subscriptions.push(disposable);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vsce package</span><br></pre></td></tr></table></figure><h4 id="提示没有修改-README-md-文件报错"><a href="#提示没有修改-README-md-文件报错" class="headerlink" title="提示没有修改 README.md 文件报错"></a>提示没有修改 README.md 文件报错</h4><p><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/223dd58e-0469-4767-9bae-6d2431595a61.png" alt="223dd58e-0469-4767-9bae-6d2431595a61"></p><h5 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h5><p>修改对应的 markdown 描述<br><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/d338a43b-f876-4cd1-893e-822624a558a3.png" alt="d338a43b-f876-4cd1-893e-822624a558a3"></p><h4 id="icon-报错"><a href="#icon-报错" class="headerlink" title="icon 报错"></a>icon 报错</h4><p><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/ab558c75-0384-4f26-b1db-a6b83944b213.png" alt="ab558c75-0384-4f26-b1db-a6b83944b213"></p><h4 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h4><p><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/29a56432-a80a-43e1-b80c-28b5c3623822.png" alt="29a56432-a80a-43e1-b80c-28b5c3623822"></p><p>在 icon 下加上对应的仓库</p><h4 id="打包成功和安装"><a href="#打包成功和安装" class="headerlink" title="打包成功和安装"></a>打包成功和安装</h4><p><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/d49f30ff-7358-41e0-968c-7be0a0fc2c06.png" alt="d49f30ff-7358-41e0-968c-7be0a0fc2c06"></p><p><img src="/2020/06/07/%E6%8A%80%E6%9C%AF/2020-06-07-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAvscode%E6%8F%92%E4%BB%B6/22b6bf6a-3aa5-424f-bff6-f8d9fad76706.png" alt="22b6bf6a-3aa5-424f-bff6-f8d9fad76706"></p><h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4><h5 id="默认生成的-package-json-里没有-publisher-需要加上-如果要发布到应用市场的话-这个名字必须与发布者一致"><a href="#默认生成的-package-json-里没有-publisher-需要加上-如果要发布到应用市场的话-这个名字必须与发布者一致" class="headerlink" title="默认生成的 package.json 里没有 publisher,需要加上,如果要发布到应用市场的话,这个名字必须与发布者一致"></a>默认生成的 package.json 里没有 publisher,需要加上,如果要发布到应用市场的话,这个名字必须与发布者一致</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;vscode 作为现在一个应用最广泛和最强大的 ide 之一,有时候我们需要自己定制一些插件来提高我们的工作效率;&lt;br&gt;这里我已经开发了一
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="其他工具/插件" scheme="https://ax-codes.github.io/tags/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>antd webpack 运行时切换主题</title>
    <link href="https://ax-codes.github.io/2020/06/05/%E6%8A%80%E6%9C%AF/2020-06-05-antd%20webpack%20%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98/"/>
    <id>https://ax-codes.github.io/2020/06/05/技术/2020-06-05-antd webpack 运行时切换主题/</id>
    <published>2020-06-05T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.845Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>antd 版本:^4.1.4(和高版本没关系,我升级到最新版本样式适配到还是不怎么好)<br>antd-theme-webpack-plugin:版本^1.3.4</p><p>antd 4.0 以后引入了黑夜主题,因为觉得加上主题切换会让系统显得高级一点,所以在此记录一下</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tyarn add antd-theme-webpack-plugin antd-theme-generator -D</span><br></pre></td></tr></table></figure><p>备注:安装到开发环境就行</p><h3 id="webpack-配置"><a href="#webpack-配置" class="headerlink" title="webpack 配置"></a>webpack 配置</h3><h3 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h3><p><img src="/2020/06/05/%E6%8A%80%E6%9C%AF/2020-06-05-antd%20webpack%20%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98/414d0722-3f9e-4bee-805e-4753daa47408.png" alt="414d0722-3f9e-4bee-805e-4753daa47408"><br>这几个文件可以这里下载:<a href="https://github.com/mzohaibqc/antd-theme-webpack-plugin/tree/master/examples/customize-cra/src" target="_blank" rel="noopener">https://github.com/mzohaibqc/antd-theme-webpack-plugin/tree/master/examples/customize-cra/src</a></p><h4 id="定义配置"><a href="#定义配置" class="headerlink" title="定义配置"></a>定义配置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eslint-disable-next-line @typescript-eslint/no-var-requires</span></span><br><span class="line"><span class="keyword">const</span> AntDesignThemePlugin = <span class="built_in">require</span>(<span class="string">"antd-theme-webpack-plugin"</span>);</span><br><span class="line"><span class="comment">// eslint-disable-next-line @typescript-eslint/no-var-requires</span></span><br><span class="line"><span class="keyword">const</span> &#123; getLessVars &#125; = <span class="built_in">require</span>(<span class="string">"antd-theme-generator"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> themeVariables = getLessVars(</span><br><span class="line">  resolve(PROJECT_ROOT, <span class="string">"./src/assets/styles/vars.less"</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> defaultVars = getLessVars(</span><br><span class="line">  <span class="string">"./node_modules/antd/lib/style/themes/default.less"</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> darkVars = &#123;</span><br><span class="line">  ...getLessVars(<span class="string">"./node_modules/antd/lib/style/themes/dark.less"</span>),</span><br><span class="line">  <span class="string">"@primary-color"</span>: defaultVars[<span class="string">"@primary-color"</span>],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> lightVars = &#123;</span><br><span class="line">  ...getLessVars(<span class="string">"./node_modules/antd/lib/style/themes/compact.less"</span>),</span><br><span class="line">  <span class="string">"@primary-color"</span>: defaultVars[<span class="string">"@primary-color"</span>],</span><br><span class="line">&#125;;</span><br><span class="line">fs.writeFileSync(<span class="string">"./src/assets/dark.json"</span>, <span class="built_in">JSON</span>.stringify(darkVars));</span><br><span class="line">fs.writeFileSync(<span class="string">"./src/assets/light.json"</span>, <span class="built_in">JSON</span>.stringify(lightVars));</span><br><span class="line">fs.writeFileSync(<span class="string">"./src/assets/theme.json"</span>, <span class="built_in">JSON</span>.stringify(themeVariables));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">  stylesDir: resolve(PROJECT_ROOT, <span class="string">"./src/assets/"</span>),</span><br><span class="line">  antDir: resolve(PROJECT_ROOT, <span class="string">"./node_modules/antd"</span>),</span><br><span class="line">  varFile: resolve(PROJECT_ROOT, <span class="string">"./src/assets/styles/vars.less"</span>),</span><br><span class="line">  themeVariables: [</span><br><span class="line">    ...new <span class="built_in">Set</span>([</span><br><span class="line">      ...Object.keys(darkVars),</span><br><span class="line">      ...Object.keys(lightVars),</span><br><span class="line">      ...Object.keys(themeVariables),</span><br><span class="line">    ]),</span><br><span class="line">  ],</span><br><span class="line">  generateOnce: <span class="literal">false</span>, <span class="comment">// generate color.less on each compilation</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="webpack-安装插件"><a href="#webpack-安装插件" class="headerlink" title="webpack 安装插件"></a>webpack 安装插件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> AntDesignThemePlugin(options); <span class="comment">//引用上面定义到options</span></span><br></pre></td></tr></table></figure><h3 id="less-loader-加载器关闭-javascript"><a href="#less-loader-加载器关闭-javascript" class="headerlink" title="less-loader 加载器关闭 javascript"></a>less-loader 加载器关闭 javascript</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  javascriptEnabled: <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">    use: [</span><br><span class="line">        ...getCssLoaders(<span class="number">2</span>, <span class="literal">true</span>),</span><br><span class="line">        &#123;</span><br><span class="line">            loader: <span class="string">'less-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">                javascriptEnabled: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="index-html-添加脚本"><a href="#index-html-添加脚本" class="headerlink" title="index.html 添加脚本"></a>index.html 添加脚本</h3><p>在你的 html 主体文件 body 里开头添加下列代码(一般 webpack 主体文件都是 public 里的 index.html)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet/less"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/color.less"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.less = &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">    env: <span class="string">"production"</span>,</span></span><br><span class="line">  &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/less.js/2.7.2/less.min.js"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加动态切换逻辑代码"><a href="#添加动态切换逻辑代码" class="headerlink" title="添加动态切换逻辑代码"></a>添加动态切换逻辑代码</h3><h4 id="引入前面加入的对应-json-文件-比如黑色主题就是-dark-json"><a href="#引入前面加入的对应-json-文件-比如黑色主题就是-dark-json" class="headerlink" title="引入前面加入的对应 json 文件,比如黑色主题就是 dark.json"></a>引入前面加入的对应 json 文件,比如黑色主题就是 dark.json</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> darkVars <span class="keyword">from</span> <span class="string">"@/assets/dark.json"</span>;</span><br></pre></td></tr></table></figure><h4 id="添加切换主题逻辑-使用上面引入的-json-文件进行主题切换"><a href="#添加切换主题逻辑-使用上面引入的-json-文件进行主题切换" class="headerlink" title="添加切换主题逻辑,使用上面引入的 json 文件进行主题切换"></a>添加切换主题逻辑,使用上面引入的 json 文件进行主题切换</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.less</span><br><span class="line">  .modifyVars(darkVars)</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    message.success(<span class="string">"切换主题成功"</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    message.error(<span class="string">`切换主题失败`</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h4 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h4><p><img src="/2020/06/05/%E6%8A%80%E6%9C%AF/2020-06-05-antd%20webpack%20%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98/6009a5fd-7e35-41f4-8f43-e317dcd826aa.png" alt="6009a5fd-7e35-41f4-8f43-e317dcd826aa"></p><h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4><p>以后加样式的适合要注意各种主题都要测试,有些没有的样式可能需要自定义适配</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;antd 版本:^4.1.4(和高版本没关系,我升级到最新版本样式适配到还是不怎么好)&lt;br&gt;antd-theme-webpack-plug
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装airflow</title>
    <link href="https://ax-codes.github.io/2020/05/25/%E6%8A%80%E6%9C%AF/2020-05-25-ubuntu%E5%AE%89%E8%A3%85airflow/"/>
    <id>https://ax-codes.github.io/2020/05/25/技术/2020-05-25-ubuntu安装airflow/</id>
    <published>2020-05-25T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.845Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>airflow 是一个工作流功能的任务框架<br>airflow 官网:<a href="http://airflow.apache.org/docs/stable/start.html" target="_blank" rel="noopener">http://airflow.apache.org/docs/stable/start.html</a></p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>环境:windows 子 liunx 系统<br>系统版本:ubuntu 02<br>python 版本:3.8.2</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># but you can lay foundation somewhere else if you prefer</span><br><span class="line"># (optional)</span><br><span class="line">export AIRFLOW_HOME&#x3D;~&#x2F;airflow</span><br><span class="line"></span><br><span class="line"># install from pypi using pip</span><br><span class="line">pip install apache-airflow</span><br><span class="line"></span><br><span class="line"># initialize the database</span><br><span class="line">airflow initdb</span><br><span class="line"></span><br><span class="line"># start the web server, default port is 8080</span><br><span class="line">airflow webserver -p 8080</span><br><span class="line"></span><br><span class="line"># start the scheduler</span><br><span class="line">airflow scheduler</span><br><span class="line"></span><br><span class="line"># visit localhost:8080 in the browser and enable the example dag in the home page</span><br></pre></td></tr></table></figure><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><h4 id="airflow-安装-psutil-的时候报错"><a href="#airflow-安装-psutil-的时候报错" class="headerlink" title="airflow 安装 psutil 的时候报错"></a>airflow 安装 psutil 的时候报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Failed building wheel for psutil</span><br><span class="line">error: command &#39;x86_64-linux-gnu-gcc&#39; failed with exit status 1</span><br></pre></td></tr></table></figure><h5 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install Scrapy</span><br><span class="line">pip install virtualenv</span><br><span class="line">apt-get install python2.7 python2.7-dev or apt-get install python3 python3-dev(根据你对应的python版本)</span><br></pre></td></tr></table></figure><h4 id="airflow-安装-mysql-插件时候报错"><a href="#airflow-安装-mysql-插件时候报错" class="headerlink" title="airflow 安装 mysql 插件时候报错"></a>airflow 安装 mysql 插件时候报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;bin&#x2F;sh: 1: mysql_config: not found</span><br></pre></td></tr></table></figure><h5 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure><h4 id="python-airflow-启动报错"><a href="#python-airflow-启动报错" class="headerlink" title="python airflow 启动报错"></a>python airflow 启动报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModuleNotFoundError: No module named &#39;typing_extensions&#39;</span><br></pre></td></tr></table></figure><h5 id="解决-2"><a href="#解决-2" class="headerlink" title="解决"></a>解决</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install typing_extensions</span><br></pre></td></tr></table></figure><h4 id="airflow-webserver-p-8080-运行报错"><a href="#airflow-webserver-p-8080-运行报错" class="headerlink" title="airflow webserver -p 8080 运行报错"></a>airflow webserver -p 8080 运行报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileNotFoundError: [Errno 2] No such file or directory: &#39;gunicorn&#39;</span><br></pre></td></tr></table></figure><h5 id="解决-3"><a href="#解决-3" class="headerlink" title="解决"></a>解决</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gunicorn</span><br><span class="line">pip install gunicorn</span><br></pre></td></tr></table></figure><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>将 python3 修改成默认 python 执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python3 150</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;airflow 是一个工作流功能的任务框架&lt;br&gt;airflow 官网:&lt;a href=&quot;http://airflow.apache.org
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="python" scheme="https://ax-codes.github.io/tags/python/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="其他工具/插件" scheme="https://ax-codes.github.io/tags/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>express session存内存demo</title>
    <link href="https://ax-codes.github.io/2020/05/24/%E6%8A%80%E6%9C%AF/2020-05-24-express%20session%E5%AD%98%E5%86%85%E5%AD%98demo/"/>
    <id>https://ax-codes.github.io/2020/05/24/技术/2020-05-24-express session存内存demo/</id>
    <published>2020-05-24T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.844Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>express session 存内存 demo</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">"cookie-parser"</span>);</span><br><span class="line"><span class="keyword">var</span> session = <span class="built_in">require</span>(<span class="string">"express-session"</span>);</span><br><span class="line"></span><br><span class="line">app.use(cookieParser());</span><br><span class="line">app.use(</span><br><span class="line">  session(&#123;</span><br><span class="line">    secret: <span class="string">"12345"</span>,</span><br><span class="line">    name: <span class="string">"name"</span>,</span><br><span class="line">    cookie: &#123; <span class="attr">maxAge</span>: <span class="number">60000</span> &#125;,</span><br><span class="line">    resave: <span class="literal">false</span>,</span><br><span class="line">    saveUninitialized: <span class="literal">true</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">"/set_session"</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  req.session.name = <span class="string">"ax"</span>;</span><br><span class="line">  <span class="keyword">return</span> res.json(&#123; <span class="attr">data</span>: <span class="string">"设置session成功"</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">"/get_session"</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> name = req.session.name;</span><br><span class="line">  <span class="keyword">return</span> res.json(&#123; <span class="attr">data</span>: <span class="string">`session value = <span class="subst">$&#123;name&#125;</span>`</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.listen(<span class="number">9001</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> host = server.address().address;</span><br><span class="line">  <span class="keyword">var</span> port = server.address().port;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"应用实例，访问地址为 http://%s:%s"</span>, host, port);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;express session 存内存 demo&lt;/p&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>nginx部署vue或react应用,并设置代理</title>
    <link href="https://ax-codes.github.io/2020/05/01/%E6%8A%80%E6%9C%AF/2020-05-01-nginx%E9%83%A8%E7%BD%B2vue%E6%88%96react%E5%BA%94%E7%94%A8,%E5%B9%B6%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>https://ax-codes.github.io/2020/05/01/技术/2020-05-01-nginx部署vue或react应用,并设置代理/</id>
    <published>2020-05-01T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.843Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>nginx 部署 vue 或 react 应用,并设置代理</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       9000;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location /&#123;</span><br><span class="line">            root   F:/learning/webpack/react-typescript-boilerplate/dist;//react编译的dist包路径</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            try_files $uri $uri/ /index.html =404;</span><br><span class="line">        &#125;</span><br><span class="line">        location /api/ &#123;</span><br><span class="line">              proxy_pass http://127.0.0.1:3000/api/;#转发请求的地址</span><br><span class="line">              proxy_connect_timeout 6000;#链接超时设置</span><br><span class="line">              proxy_read_timeout 6000;#访问接口超时设置</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="重启-nginx"><a href="#重启-nginx" class="headerlink" title="重启 nginx"></a>重启 nginx</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;nginx 部署 vue 或 react 应用,并设置代理&lt;/p&gt;
&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="其他工具/插件" scheme="https://ax-codes.github.io/tags/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>yarn脚手架或者包找不到问题</title>
    <link href="https://ax-codes.github.io/2020/03/20/%E6%8A%80%E6%9C%AF/2020-03-18-yarn%E8%84%9A%E6%89%8B%E6%9E%B6%E6%88%96%E8%80%85%E5%8C%85%E6%89%BE%E4%B8%8D%E5%88%B0%E9%97%AE%E9%A2%98/"/>
    <id>https://ax-codes.github.io/2020/03/20/技术/2020-03-18-yarn脚手架或者包找不到问题/</id>
    <published>2020-03-20T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.840Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>yarn yarn 脚手架或者包找不到问题,原因是我们的 yarn 的 bin 路径没有加到环境变量,所以系统找不到,而我们的 npm 默认安装就已经加了的,所以 npm 可以</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>把 yarn global bin 的路径加到系统环境变量中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F:\blog&gt;tyarn global bin</span><br><span class="line">C:\Users\10697\AppData\Local\Yarn\bin</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;yarn yarn 脚手架或者包找不到问题,原因是我们的 yarn 的 bin 路径没有加到环境变量,所以系统找不到,而我们的 npm 默认
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="其他工具/插件" scheme="https://ax-codes.github.io/tags/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>dva history报错问题</title>
    <link href="https://ax-codes.github.io/2020/03/19/%E6%8A%80%E6%9C%AF/2020-03-19-dva%20history%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>https://ax-codes.github.io/2020/03/19/技术/2020-03-19-dva history报错问题/</id>
    <published>2020-03-19T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.841Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>dva 版本:2.4.1</p><p>在项目配置好 dva 后,启动看到浏览器控制台报下面错误</p><h3 id="waring-log"><a href="#waring-log" class="headerlink" title="waring log"></a>waring log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.js:1 Warning: Please use &#96;require(&quot;history&quot;).createHashHistory&#96; instead of &#96;require(&quot;history&#x2F;createHashHistory&quot;)&#96;. Support for the latter will be removed in the next major release.</span><br></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>修改 dva 包的 lib 里的 index.js 里的 require(“history/createHashHistory”) 修改成 require(“history”).createHashHistory;如下图<br><img src="/2020/03/19/%E6%8A%80%E6%9C%AF/2020-03-19-dva%20history%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/1.jpg" alt="1.jpg"></p><p>暂时只能这样解决</p><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;dva 版本:2.4.1&lt;/p&gt;
&lt;p&gt;在项目配置好 dva 后,启动看到浏览器控制台报下面错误&lt;/p&gt;
&lt;h3 id=&quot;waring-lo
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>react a标签eslint问题</title>
    <link href="https://ax-codes.github.io/2020/03/18/%E6%8A%80%E6%9C%AF/2020-03-18-react%20a%E6%A0%87%E7%AD%BEeslint%E9%97%AE%E9%A2%98/"/>
    <id>https://ax-codes.github.io/2020/03/18/技术/2020-03-18-react a标签eslint问题/</id>
    <published>2020-03-18T12:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.840Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>react a 标签 eslint 问题</p><h3 id="waring-log"><a href="#waring-log" class="headerlink" title="waring log"></a>waring log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  Line 10:33:  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a</span><br><span class="line">link, use a button and change it with appropriate styles. Learn more: https:&#x2F;&#x2F;github.com&#x2F;evcohen&#x2F;eslint-plugin-jsx-a11y&#x2F;blob&#x2F;master&#x2F;docs&#x2F;rules&#x2F;anchor-is-valid.md         jsx-a11y&#x2F;anchor-is-valid</span><br></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="在-eslint-的配置加上的-rules-加上"><a href="#在-eslint-的配置加上的-rules-加上" class="headerlink" title="在 eslint 的配置加上的 rules 加上"></a>在 eslint 的配置加上的 rules 加上</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;jsx-a11y&#x2F;anchor-is-valid&quot;: &quot;off&quot;</span><br></pre></td></tr></table></figure><p>例如我的 create-react-app 项目的.eslintrc.json 的配置是:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"extends"</span>: <span class="string">"react-app"</span>,</span><br><span class="line">  <span class="attr">"rules"</span>: &#123;</span><br><span class="line">    <span class="attr">"jsx-a11y/anchor-is-valid"</span>: <span class="string">"off"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="a-标签改成"><a href="#a-标签改成" class="headerlink" title="a 标签改成"></a>a 标签改成</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span>&gt;</span>&#123;text&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意:#后面有一个空格</p></blockquote><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;react a 标签 eslint 问题&lt;/p&gt;
&lt;h3 id=&quot;waring-log&quot;&gt;&lt;a href=&quot;#waring-log&quot; cla
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>d2 admin vue.config.js配置本地开发代理</title>
    <link href="https://ax-codes.github.io/2019/12/28/%E6%8A%80%E6%9C%AF/2019-12-28-d2%20admin%20vue.config.js%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E4%BB%A3%E7%90%86/"/>
    <id>https://ax-codes.github.io/2019/12/28/技术/2019-12-28-d2 admin vue.config.js配置本地开发代理/</id>
    <published>2019-12-28T02:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.837Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>d2 admin vue.config.js 配置本地开发代理</p><h3 id="在-vue-config-js-配置"><a href="#在-vue-config-js-配置" class="headerlink" title="在 vue.config.js 配置"></a>在 vue.config.js 配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    publicPath, <span class="comment">// 和 publicPath 保持一致</span></span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://localhost:3000'</span>,</span><br><span class="line">        ws: <span class="literal">true</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">'/api'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;d2 admin vue.config.js 配置本地开发代理&lt;/p&gt;
&lt;h3 id=&quot;在-vue-config-js-配置&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>nginx https 配置</title>
    <link href="https://ax-codes.github.io/2019/12/28/%E6%8A%80%E6%9C%AF/2019-12-28-nginx%20https%20%E9%85%8D%E7%BD%AE/"/>
    <id>https://ax-codes.github.io/2019/12/28/技术/2019-12-28-nginx https 配置/</id>
    <published>2019-12-28T02:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>nginx https 配置<br>证书:我的证书是阿里云提供的免费一年的,具体下载方式可以百度</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在 nginx 新增一个 server 节点配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server          # SSL配置</span><br><span class="line">    &#123;</span><br><span class="line">        listen <span class="number">443</span>;</span><br><span class="line">        server_name www.zgaiyu.com zgaiyu.com;           # 改成你的域名</span><br><span class="line">        ssl on;</span><br><span class="line">        root /usr/local/wx_app_api/;</span><br><span class="line">        ssl_certificate 1_www.zgaiyu.com_bundle.crt;     # 改成你的证书名称</span><br><span class="line">        ssl_certificate_key 2_www.zgaiyu.com.key;          # 改成你的证书名称</span><br><span class="line">        ssl_session_timeout <span class="number">5</span>m;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1<span class="number">.1</span> TLSv1<span class="number">.2</span>;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/<span class="keyword">default</span>.d<span class="comment">/*.conf;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        location ^~/wx_app_api/ &#123;</span></span><br><span class="line"><span class="comment">            proxy_set_header Host $host;</span></span><br><span class="line"><span class="comment">            proxy_set_header X-Real-IP $remote_addr;</span></span><br><span class="line"><span class="comment">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span><br><span class="line"><span class="comment">            #配置反向代理 注意:最后一定要加上/不然跳转链接是http://127.0.0.1:8080/wx_app_api/</span></span><br><span class="line"><span class="comment">            proxy_pass http://127.0.0.1:8080/; #这个8080是我web api的端口</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;nginx https 配置&lt;br&gt;证书:我的证书是阿里云提供的免费一年的,具体下载方式可以百度&lt;/p&gt;
&lt;h3 id=&quot;配置&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://ax-codes.github.io/tags/linux/"/>
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>vscode注释插件</title>
    <link href="https://ax-codes.github.io/2019/12/28/%E6%8A%80%E6%9C%AF/2019-12-28-vscode%E6%B3%A8%E9%87%8A%E6%8F%92%E4%BB%B6/"/>
    <id>https://ax-codes.github.io/2019/12/28/技术/2019-12-28-vscode注释插件/</id>
    <published>2019-12-28T02:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.839Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>vscode 搜索插件并安装:korofileheader<br>github:<a href="https://github.com/OBKoro1/koro1FileHeader" target="_blank" rel="noopener">https://github.com/OBKoro1/koro1FileHeader</a></p><h3 id="配置-具体配置可以参照-github-wiki-修改"><a href="#配置-具体配置可以参照-github-wiki-修改" class="headerlink" title="配置(具体配置可以参照 github wiki 修改)"></a>配置(具体配置可以参照 github wiki 修改)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"fileheader.customMade"</span>: &#123;</span><br><span class="line">        <span class="string">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Author"</span>: <span class="string">"ax"</span>,</span><br><span class="line">        <span class="string">"Github"</span>: <span class="string">"https://github.com/GuoXingGitHub"</span>,</span><br><span class="line">        <span class="string">"Date"</span>: <span class="string">"Do not edit"</span>,</span><br><span class="line">        <span class="string">"LastEditors"</span>: <span class="string">"ax"</span>,</span><br><span class="line">        <span class="string">"LastEditTime"</span>: <span class="string">"Do not edit"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"fileheader.cursorMode"</span>: &#123;</span><br><span class="line">        <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"param"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"return"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"fileheader.configObj"</span>: &#123;</span><br><span class="line">        <span class="string">"createFileTime"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="文件头部注释："><a href="#文件头部注释：" class="headerlink" title="文件头部注释："></a>文件头部注释：</h4><p>在当前编辑文件中使用快捷键:window：ctrl+alt+i/mac：ctrl+cmd+i,即可生成文件头部注释。</p><h4 id="函数注释："><a href="#函数注释：" class="headerlink" title="函数注释："></a>函数注释：</h4><p>将光标放在函数行或者将光标放在函数上方的空白行<br>使用快捷键 window：ctrl+alt+t,mac：ctrl+cmd+t，即可生成函数注释。<br>事实上，函数注释在文件的任意位置都可生成，这里需要自己控制。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;vscode 搜索插件并安装:korofileheader&lt;br&gt;github:&lt;a href=&quot;https://github.com/OB
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="其他工具/插件" scheme="https://ax-codes.github.io/tags/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>nestjs 使用class-validator自定义字段检测</title>
    <link href="https://ax-codes.github.io/2019/12/28/%E6%8A%80%E6%9C%AF/2019-12-28-nestjs%20%E4%BD%BF%E7%94%A8class-validator%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E6%AE%B5%E6%A3%80%E6%B5%8B/"/>
    <id>https://ax-codes.github.io/2019/12/28/技术/2019-12-28-nestjs 使用class-validator自定义字段检测/</id>
    <published>2019-12-28T02:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>nestjs 使用 class-validator 自定义字段检测</p><p>###</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@ValidatorConstraint(&#123; <span class="attr">async</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">IsUserAlreadyExistConstraint</span></span></span><br><span class="line"><span class="class">  <span class="title">implements</span> <span class="title">ValidatorConstraintInterface</span> </span>&#123;</span><br><span class="line">  <span class="keyword">async</span> validate(username: any, <span class="attr">args</span>: ValidationArguments) &#123;</span><br><span class="line">    <span class="keyword">const</span> usersRepository = <span class="keyword">await</span> getRepository(UserEntity);</span><br><span class="line">    <span class="keyword">return</span> !((<span class="keyword">await</span> usersRepository.count(&#123; <span class="attr">username</span>: username &#125;)) &gt; <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">IsUserAlreadyExist</span>(<span class="params">validationOptions?: ValidationOptions</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">object: Object, propertyName: string</span>) </span>&#123;</span><br><span class="line">    registerDecorator(&#123;</span><br><span class="line">      target: object.constructor,</span><br><span class="line">      propertyName: propertyName,</span><br><span class="line">      options: validationOptions,</span><br><span class="line">      constraints: [],</span><br><span class="line">      validator: IsUserAlreadyExistConstraint</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@IsUserAlreadyExist(&#123; <span class="attr">message</span>: <span class="string">'用户名已经存在'</span> &#125;)</span><br><span class="line">username: string;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;nestjs 使用 class-validator 自定义字段检测&lt;/p&gt;
&lt;p&gt;###&lt;/p&gt;
&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vscode 配置vue开发环境</title>
    <link href="https://ax-codes.github.io/2019/11/01/%E6%8A%80%E6%9C%AF/2019-11-01-vscode%20%E9%85%8D%E7%BD%AEvue%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://ax-codes.github.io/2019/11/01/技术/2019-11-01-vscode 配置vue开发环境/</id>
    <published>2019-11-01T09:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.836Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>vscode 配置 vue 开发环境</p><h3 id="安装-vscode"><a href="#安装-vscode" class="headerlink" title="安装 vscode"></a>安装 vscode</h3><p>下载地址:<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h3 id="安装-color-主题"><a href="#安装-color-主题" class="headerlink" title="安装 color 主题"></a>安装 color 主题</h3><p>在 vscode 扩展程序里搜索 One Dark Pro 然后进行安装</p><h3 id="安装-icon-主题"><a href="#安装-icon-主题" class="headerlink" title="安装 icon 主题"></a>安装 icon 主题</h3><p>在 vscode 扩展程序里搜索 Material Icon Theme 然后进行安装</p><h3 id="安装-vue-高亮-vue-代码"><a href="#安装-vue-高亮-vue-代码" class="headerlink" title="安装 vue(高亮 vue 代码)"></a>安装 vue(高亮 vue 代码)</h3><p>在 vscode 扩展程序里搜索 vue 然后进行安装</p><h3 id="安装-Prettier"><a href="#安装-Prettier" class="headerlink" title="安装 Prettier"></a>安装 Prettier</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ext install esbenp.prettier-vscode</span><br></pre></td></tr></table></figure><h3 id="安装-Eslint"><a href="#安装-Eslint" class="headerlink" title="安装 Eslint"></a>安装 Eslint</h3><p>在 vscode 扩展程序里搜索 Eslint 然后进行安装</p><h3 id="修改-setting-json"><a href="#修改-setting-json" class="headerlink" title="修改 setting.json"></a>修改 setting.json</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;editor.tabSize&quot;: 2,</span><br><span class="line">  &quot;editor.detectIndentation&quot;: false,</span><br><span class="line">  &quot;editor.formatOnType&quot;: false,</span><br><span class="line">  &quot;editor.formatOnPaste&quot;: true,</span><br><span class="line">  &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">  &quot;prettier.tabWidth&quot;: 2,</span><br><span class="line">  &quot;prettier.semi&quot;: true,</span><br><span class="line">  &quot;prettier.singleQuote&quot;: true,</span><br><span class="line">  &quot;[javascript]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;[html]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;[markdown]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;vetur.format.options.tabSize&quot;: 2,</span><br><span class="line">  &quot;vetur.format.defaultFormatter.html&quot;: &quot;prettyhtml&quot;,</span><br><span class="line">  &quot;vetur.format.defaultFormatter.js&quot;: &quot;vscode-typescript&quot;,</span><br><span class="line">  &quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;: true,</span><br><span class="line">  &quot;eslint.autoFixOnSave&quot;: true,</span><br><span class="line">  &quot;eslint.validate&quot;: [</span><br><span class="line">    &quot;javascript&quot;,</span><br><span class="line">    &quot;html&quot;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;language&quot;: &quot;vue&quot;,</span><br><span class="line">      &quot;autoFix&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;workbench.iconTheme&quot;: &quot;material-icon-theme&quot;,</span><br><span class="line">  &quot;workbench.colorTheme&quot;: &quot;One Dark Pro&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-prettierrc-js"><a href="#配置-prettierrc-js" class="headerlink" title="配置.prettierrc.js"></a>配置.prettierrc.js</h3><p>在项目根目录新增.prettierrc.js 文件新增内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  printWidth: 200, &#x2F;&#x2F; 最大打印宽度,超出将换行</span><br><span class="line">  singleQuote: false, &#x2F;&#x2F; 默认单引号 ,false 默认使用双引号</span><br><span class="line">  bracketSpacing: true,</span><br><span class="line">  jsxBracketSameLine: true,</span><br><span class="line">  htmlWhitespaceSensitivity: &quot;ignore&quot; &#x2F;&#x2F; 问题1中的设置</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="配置-eslintrc-js"><a href="#配置-eslintrc-js" class="headerlink" title="配置.eslintrc.js"></a>配置.eslintrc.js</h3><p>在项目根目录新增.eslintrc.js 文件新增内容</p><p>原因:<br>修改了 Prettier 格式化后 ESlint 检查警报,并更改了我的代码格式.<br>首先检查 ESlint 配置是否使用了 prettier 规则,如果确定使用了,则是一些自定义规则在 ESlint 和 Prettier 插件中的配置不一致导致的。检查 eslintrc.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  root: true,</span><br><span class="line">  env: &#123;</span><br><span class="line">    node: true</span><br><span class="line">  &#125;,</span><br><span class="line">  extends: [&#39;plugin:vue&#x2F;essential&#39;, &#39;@vue&#x2F;standard&#39;],</span><br><span class="line">  rules: &#123;</span><br><span class="line">    &#39;no-console&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;,</span><br><span class="line">    &#39;no-debugger&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  parserOptions: &#123;</span><br><span class="line">    parser: &#39;babel-eslint&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;vscode 配置 vue 开发环境&lt;/p&gt;
&lt;h3 id=&quot;安装-vscode&quot;&gt;&lt;a href=&quot;#安装-vscode&quot; class=&quot;
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Prettier配置</title>
    <link href="https://ax-codes.github.io/2019/11/01/%E6%8A%80%E6%9C%AF/2019-11-01-Prettier%E9%85%8D%E7%BD%AE/"/>
    <id>https://ax-codes.github.io/2019/11/01/技术/2019-11-01-Prettier配置/</id>
    <published>2019-11-01T09:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.836Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Prettier 安装命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ext install esbenp.prettier-vscode</span><br></pre></td></tr></table></figure><h3 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h3><p>在项目根目录新增.prettierrc.js 文件新增内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  printWidth: 200, &#x2F;&#x2F; 最大打印宽度,超出将换行</span><br><span class="line">  singleQuote: false, &#x2F;&#x2F; 默认单引号 ,false 默认使用双引号</span><br><span class="line">  bracketSpacing: true,</span><br><span class="line">  jsxBracketSameLine: true,</span><br><span class="line">  htmlWhitespaceSensitivity: &quot;ignore&quot; &#x2F;&#x2F; 问题1中的设置</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改了 Prettier 格式化后 ESlint 检查警报,并更改了我的代码格式.<br>首先检查 ESlint 配置是否使用了 prettier 规则,如果确定使用了,则是一些自定义规则在 ESlint 和 Prettier 插件中的配置不一致导致的。检查 eslintrc.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  root: true,</span><br><span class="line">  env: &#123; node: true &#125;,</span><br><span class="line">  extends: [&quot;plugin:vue&#x2F;essential&quot;, &quot;@vue&#x2F;prettier&quot;, &quot;@vue&#x2F;typescript&quot;],</span><br><span class="line">  rules: &#123;</span><br><span class="line">    &quot;no-console&quot;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &quot;production&quot; ? &quot;error&quot; : &quot;off&quot;,</span><br><span class="line">    &quot;no-debugger&quot;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &quot;production&quot; ? &quot;error&quot; : &quot;off&quot;,</span><br><span class="line">    &quot;prettier&#x2F;prettier&quot;: [</span><br><span class="line">      &quot;error&quot;,</span><br><span class="line">    &#x2F;&#x2F; 如果插件配置中修改了相关选项,</span><br><span class="line">    &#x2F;&#x2F; 则必须在此添加相对应的自定义规则否则就会出现编辑器格式化后ESlint检查无法通过的情况。</span><br><span class="line">      &#123;</span><br><span class="line">        printWidth: 200,</span><br><span class="line">        singleQuote: false,</span><br><span class="line">        bracketSpacing: true,</span><br><span class="line">        jsxBracketSameLine: true,</span><br><span class="line">        htmlWhitespaceSensitivity: &quot;ignore&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  parserOptions: &#123; parser: &quot;@typescript-eslint&#x2F;parser&quot; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="ts"><a href="#ts" class="headerlink" title="ts"></a>ts</h3><p>在项目根目录新增.prettierrc.js 文件新增内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  printWidth: 120,</span><br><span class="line">  tabWidth: 4,</span><br><span class="line">  singleQuote: true,</span><br><span class="line">  semi: true,</span><br><span class="line">  trailingComma: &#39;es5&#39;,</span><br><span class="line">  bracketSpacing: true,</span><br><span class="line">  jsxBracketSameLine: true,</span><br><span class="line">  arrowParens: &#39;always&#39;,</span><br><span class="line">  parser: &#39;typescript&#39;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Prettier 安装命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="开发工具/插件" scheme="https://ax-codes.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率工具/插件" scheme="https://ax-codes.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="其他工具/插件" scheme="https://ax-codes.github.io/tags/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7-%E6%8F%92%E4%BB%B6/"/>
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>osharp框架学习</title>
    <link href="https://ax-codes.github.io/2019/10/24/%E6%8A%80%E6%9C%AF/2019-10-24-osharp%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%20copy/"/>
    <id>https://ax-codes.github.io/2019/10/24/技术/2019-10-24-osharp框架学习 copy/</id>
    <published>2019-10-24T09:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.832Z</updated>
    
    <content type="html"><![CDATA[<p>###<br>osharp框架学习</p><h3 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h3><p>AspOsharpPackManager: AspNetCore 模块管理器 AspOsharpPackManager : OsharpPackManager, IAspUsePack</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###&lt;br&gt;osharp框架学习&lt;/p&gt;
&lt;h3 id=&quot;包管理&quot;&gt;&lt;a href=&quot;#包管理&quot; class=&quot;headerlink&quot; title=&quot;包管理&quot;&gt;&lt;/a&gt;包管理&lt;/h3&gt;&lt;p&gt;AspOsharpPackManager: AspNetCore 模块管理器 As
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term=".net/.net core" scheme="https://ax-codes.github.io/tags/net-net-core/"/>
    
  </entry>
  
  <entry>
    <title>nodejs 使用 log4.js</title>
    <link href="https://ax-codes.github.io/2019/09/24/%E6%8A%80%E6%9C%AF/2019-09-24-nodejs%20%E4%BD%BF%E7%94%A8%20log4.js/"/>
    <id>https://ax-codes.github.io/2019/09/24/技术/2019-09-24-nodejs 使用 log4.js/</id>
    <published>2019-09-24T09:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.830Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>nodejs 使用 log4.js</p><h3 id="log4-js"><a href="#log4-js" class="headerlink" title="log4.js"></a>log4.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> log4js = <span class="built_in">require</span>(<span class="string">'log4js'</span>),</span><br><span class="line">        path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"> </span><br><span class="line">log4js.configure(&#123;</span><br><span class="line">    replaceConsole: <span class="literal">true</span>,</span><br><span class="line">    appenders: &#123;</span><br><span class="line">        stdout: &#123;<span class="comment">//控制台输出</span></span><br><span class="line">             type: <span class="string">'console'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        trace: &#123;</span><br><span class="line">            type: <span class="string">'dateFile'</span>,</span><br><span class="line">            filename: <span class="string">'logs/tracelog/'</span>,</span><br><span class="line">            pattern: <span class="string">'trace-yyyy-MM-dd.log'</span>,</span><br><span class="line">            alwaysIncludePattern: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        debug: &#123;</span><br><span class="line">            type: <span class="string">'dateFile'</span>,</span><br><span class="line">            filename: <span class="string">'logs/debuglog/'</span>,</span><br><span class="line">            pattern: <span class="string">'debug-yyyy-MM-dd.log'</span>,</span><br><span class="line">            alwaysIncludePattern: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        info: &#123;</span><br><span class="line">            type: <span class="string">'dateFile'</span>,</span><br><span class="line">            filename: <span class="string">'logs/infolog/'</span>,</span><br><span class="line">            pattern: <span class="string">'info-yyyy-MM-dd.log'</span>,</span><br><span class="line">            alwaysIncludePattern: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        warn: &#123;</span><br><span class="line">            type: <span class="string">'dateFile'</span>,</span><br><span class="line">            filename: <span class="string">'logs/warnlog/'</span>,</span><br><span class="line">            pattern: <span class="string">'warn-yyyy-MM-dd.log'</span>,</span><br><span class="line">            alwaysIncludePattern: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error: &#123;</span><br><span class="line">            type: <span class="string">'dateFile'</span>,</span><br><span class="line">            filename: <span class="string">'logs/errorlog/'</span>,</span><br><span class="line">            pattern: <span class="string">'error-yyyy-MM-dd.log'</span>,</span><br><span class="line">            alwaysIncludePattern: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        fatal: &#123;</span><br><span class="line">            type: <span class="string">'dateFile'</span>,</span><br><span class="line">            filename: <span class="string">'logs/fatallog/'</span>,</span><br><span class="line">            pattern: <span class="string">'fatal-yyyy-MM-dd.log'</span>,</span><br><span class="line">            alwaysIncludePattern: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    categories: &#123;</span><br><span class="line">        trace: &#123; <span class="attr">appenders</span>: [<span class="string">'stdout'</span>, <span class="string">'trace'</span>], <span class="attr">level</span>: <span class="string">'trace'</span> &#125;,<span class="comment">//appenders:采用的appender,取appenders项,level:设置级别</span></span><br><span class="line">        debug: &#123; <span class="attr">appenders</span>: [<span class="string">'stdout'</span>, <span class="string">'debug'</span>], <span class="attr">level</span>: <span class="string">'debug'</span> &#125;,</span><br><span class="line">        <span class="keyword">default</span>: &#123; <span class="attr">appenders</span>: [<span class="string">'stdout'</span>, <span class="string">'info'</span>], <span class="attr">level</span>: <span class="string">'info'</span> &#125;,</span><br><span class="line">        warn: &#123; <span class="attr">appenders</span>: [<span class="string">'stdout'</span>, <span class="string">'warn'</span>], <span class="attr">level</span>: <span class="string">'warn'</span> &#125;,</span><br><span class="line">        error: &#123; <span class="attr">appenders</span>: [<span class="string">'stdout'</span>, <span class="string">'error'</span>], <span class="attr">level</span>: <span class="string">'error'</span> &#125;,</span><br><span class="line">        fatal: &#123; <span class="attr">appenders</span>: [<span class="string">'stdout'</span>, <span class="string">'fatal'</span>], <span class="attr">level</span>: <span class="string">'fatal'</span> &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">exports.getLogger = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;<span class="comment">//name取categories项</span></span><br><span class="line">    <span class="keyword">return</span> log4js.getLogger(name || <span class="string">'info'</span>)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">exports.useLogger = <span class="function"><span class="keyword">function</span> (<span class="params">app, logger</span>) </span>&#123;<span class="comment">//用来与express结合</span></span><br><span class="line">    app.use(log4js.connectLogger(logger || log4js.getLogger(<span class="string">'info'</span>), &#123;</span><br><span class="line">        format: <span class="string">'[:remote-addr :method :url :status :response-timems][:referrer HTTP/:http-version :user-agent]'</span><span class="comment">//自定义输出格式</span></span><br><span class="line">    &#125;))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> log4js  = <span class="built_in">require</span>(<span class="string">"./log4js"</span>),</span><br><span class="line">logger  = log4js.getLogger(<span class="string">"info"</span>)</span><br><span class="line"></span><br><span class="line">logger.info(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br><span class="line">logger.trace(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br><span class="line">logger.debug(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br><span class="line">logger.info(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br><span class="line">logger.warn(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br><span class="line">logger.error(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br><span class="line">logger.fatal(<span class="string">"现在时间："</span>,<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;nodejs 使用 log4.js&lt;/p&gt;
&lt;h3 id=&quot;log4-js&quot;&gt;&lt;a href=&quot;#log4-js&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>nodejs 发送邮件</title>
    <link href="https://ax-codes.github.io/2019/09/24/%E6%8A%80%E6%9C%AF/2019-09-24-nodejs%20%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>https://ax-codes.github.io/2019/09/24/技术/2019-09-24-nodejs 发送邮件/</id>
    <published>2019-09-24T09:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.831Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>nodejs 发送邮件</p><h3 id="安装nodemailer"><a href="#安装nodemailer" class="headerlink" title="安装nodemailer"></a>安装nodemailer</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install nodemailer</span><br></pre></td></tr></table></figure><h3 id="sendEmail-js"><a href="#sendEmail-js" class="headerlink" title="sendEmail.js"></a>sendEmail.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nodemailer = <span class="built_in">require</span>(<span class="string">"nodemailer"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> smtp = <span class="string">"smtp.qq.com"</span>;<span class="comment">//使用服务</span></span><br><span class="line"><span class="keyword">var</span> mailFrom = <span class="string">"*@qq.com"</span>;<span class="comment">//发送者邮箱</span></span><br><span class="line"><span class="keyword">var</span> mailPwd = <span class="string">"*"</span>;<span class="comment">//smtp 秘钥,在qq邮箱账户里申请</span></span><br><span class="line"></span><br><span class="line">exports.emailTo = <span class="function"><span class="keyword">function</span>(<span class="params">email,subject,text,html,callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> transporter = nodemailer.createTransport(&#123;</span><br><span class="line">        host: smtp,</span><br><span class="line">        auth: &#123;</span><br><span class="line">            user: mailFrom,</span><br><span class="line">            pass: mailPwd <span class="comment">//授权码,通过QQ获取  </span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> mailOptions = &#123;</span><br><span class="line">        <span class="keyword">from</span>: mailFrom, <span class="comment">// 发送者  </span></span><br><span class="line">        to: email, <span class="comment">// 接受者,可以同时发送多个,以逗号隔开  </span></span><br><span class="line">        subject: subject, <span class="comment">// 标题  </span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span>(text != <span class="literal">undefined</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mailOptions.text =text;<span class="comment">// 文本  </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(html != <span class="literal">undefined</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mailOptions.html =html;<span class="comment">// html  </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> result = &#123;</span><br><span class="line">        httpCode: <span class="number">200</span>,</span><br><span class="line">        message: <span class="string">'发送成功!'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        transporter.sendMail(mailOptions, <span class="function"><span class="keyword">function</span> (<span class="params">err, info</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                result.httpCode = <span class="number">500</span>;</span><br><span class="line">                result.message = err;</span><br><span class="line">                callback(result);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            callback(result);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        result.httpCode = <span class="number">500</span>;</span><br><span class="line">        result.message = err;</span><br><span class="line">        callback(result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mailer = <span class="built_in">require</span>(<span class="string">'./sendEmail.js'</span>);</span><br><span class="line"><span class="keyword">var</span> email = <span class="string">"15692413487@163.com"</span>;</span><br><span class="line"><span class="keyword">var</span> subject = <span class="string">"标题"</span>; <span class="comment">//标题</span></span><br><span class="line"><span class="keyword">var</span> text = <span class="string">`文本`</span>;</span><br><span class="line"><span class="keyword">var</span> html = <span class="string">""</span>;</span><br><span class="line">mailer.emailTo(email, subject, text, html, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;nodejs 发送邮件&lt;/p&gt;
&lt;h3 id=&quot;安装nodemailer&quot;&gt;&lt;a href=&quot;#安装nodemailer&quot; class=&quot;h
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>node socket client 模板</title>
    <link href="https://ax-codes.github.io/2019/09/23/%E6%8A%80%E6%9C%AF/2019-09-23-node%20socket%20client%20%E6%A8%A1%E6%9D%BF/"/>
    <id>https://ax-codes.github.io/2019/09/23/技术/2019-09-23-node socket client 模板/</id>
    <published>2019-09-23T09:00:00.000Z</published>
    <updated>2020-06-09T10:00:01.829Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>node socket client 模板</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Requires</span></span><br><span class="line"><span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">'net'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create socket</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">9011</span>;</span><br><span class="line"><span class="keyword">const</span> host = <span class="string">'127.0.0.1'</span>;</span><br><span class="line"><span class="keyword">const</span> timeout = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">let</span> retrying = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Functions to handle socket events</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeConnection</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    socket.connect(port, host);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">connectEventHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'connected'</span>);</span><br><span class="line">    retrying = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dataEventHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">endEventHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'end'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeoutEventHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'timeout'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drainEventHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'drain'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">errorEventHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'error'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">closeEventHandler</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'close'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!retrying) &#123;</span><br><span class="line">        retrying = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Reconnecting...'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    setTimeout(makeConnection, timeout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create socket and bind callbacks</span></span><br><span class="line"><span class="keyword">let</span> socket = <span class="keyword">new</span> net.Socket();</span><br><span class="line">socket.on(<span class="string">'connect'</span>, connectEventHandler);</span><br><span class="line">socket.on(<span class="string">'data'</span>,    dataEventHandler);</span><br><span class="line">socket.on(<span class="string">'end'</span>,     endEventHandler);</span><br><span class="line">socket.on(<span class="string">'timeout'</span>, timeoutEventHandler);</span><br><span class="line">socket.on(<span class="string">'drain'</span>,   drainEventHandler);</span><br><span class="line">socket.on(<span class="string">'error'</span>,   errorEventHandler);</span><br><span class="line">socket.on(<span class="string">'close'</span>,   closeEventHandler);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Connect</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Connecting to '</span> + host + <span class="string">':'</span> + port + <span class="string">'...'</span>);</span><br><span class="line">makeConnection();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;node socket client 模板&lt;/p&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="技术" scheme="https://ax-codes.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://ax-codes.github.io/tags/js/"/>
    
  </entry>
  
</feed>
